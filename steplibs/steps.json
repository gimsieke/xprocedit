{
  "atomicSteps": [
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pAddAttribute",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:add-attribute"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true
        }
      ],
      "stepOption": [
        {
          "name": "match",
          "required": true
        },
        {
          "name": "attribute-name",
          "required": true
        },
        {
          "name": "attribute-prefix"
        },
        {
          "name": "attribute-namespace"
        },
        {
          "name": "attribute-value",
          "required": true
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pAddXmlBase",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:add-xml-base"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true
        }
      ],
      "stepOption": [
        {
          "name": "all",
          "required": false
        },
        {
          "name": "relative",
          "required": true
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pCompare",
      "inPorts": [
        "source",
        "alternate"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:compare"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true
        },
        {
          "portId": "alternate",
          "portGroup": "in"
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true
        }
      ],
      "stepOption": [
        {
          "name": "fail-if-not-equal",
          "required": false
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pCount",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:count"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true,
          "portSequence": true
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true
        }
      ],
      "stepOption": [
        {
          "name": "limit",
          "select": 0
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pDelete",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:delete"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true
        }
      ],
      "stepOption": [
        {
          "name": "match",
          "required": true
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pDirectoryList",
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:directory-list"
        }
      },
      "portData": [
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true
        }
      ],
      "stepOption": [
        {
          "name": "path",
          "required": true
        },
        {
          "name": "include-filter"
        },
        {
          "name": "exclude-filter"
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pError",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:error"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": false
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true,
          "portSequence": true
        }
      ],
      "stepOption": [
        {
          "name": "code",
          "required": true
        },
        {
          "name": "code-prefix"
        },
        {
          "name": "code-namespace"
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pEscapeMarkup",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:escape-markup"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true
        }
      ],
      "stepOption": [
        {
          "name": "cdata-section-elements",
          "select": ""
        },
        {
          "name": "doctype-public"
        },
        {
          "name": "doctype-system"
        },
        {
          "name": "escape-uri-attributes",
          "select": false
        },
        {
          "name": "include-content-type",
          "select": true
        },
        {
          "name": "indent",
          "select": false
        },
        {
          "name": "media-type"
        },
        {
          "name": "method",
          "select": "xml"
        },
        {
          "name": "omit-xml-declaration",
          "select": true
        },
        {
          "name": "standalone",
          "select": "omit"
        },
        {
          "name": "undeclare-prefixes"
        },
        {
          "name": "version",
          "select": "1.0"
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pFilter",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:filter"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true,
          "portSequence": true
        }
      ],
      "stepOption": [
        {
          "name": "select",
          "required": true
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pHttpRequest",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:http-request"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true
        }
      ],
      "stepOption": [
        {
          "name": "byte-order-mark"
        },
        {
          "name": "cdata-section-elements",
          "select": ""
        },
        {
          "name": "doctype-public"
        },
        {
          "name": "doctype-system"
        },
        {
          "name": "encoding"
        },
        {
          "name": "escape-uri-attributes",
          "select": false
        },
        {
          "name": "include-content-type",
          "select": true
        },
        {
          "name": "indent",
          "select": false
        },
        {
          "name": "media-type"
        },
        {
          "name": "method",
          "select": "xml"
        },
        {
          "name": "normalization-form",
          "select": "none"
        },
        {
          "name": "omit-xml-declaration",
          "select": true
        },
        {
          "name": "standalone",
          "select": "omit"
        },
        {
          "name": "undeclare-prefixes"
        },
        {
          "name": "version",
          "select": "1.0"
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pIdentity",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:identity"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portSequence": true
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portSequence": true
        }
      ]
    },
    {
      "stepGroup": "xproc.Atomic",
      "stepType": "pInsert",
      "inPorts": [
        "source",
        "insertion"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:insert"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": true
        },
        {
          "portId": "insertion",
          "portGroup": "in",
          "portSequence": true
        },
        {
          "portId": "result",
          "portGroup": "out"
        }
      ],
      "stepOption": [
        {
          "name": "match",
          "select": "/*"
        },
        {
          "name": "position",
          "required": true
        }
      ]
    }

  ],
  "compoundSteps": [
    {
      "stepGroup": "xproc.Compound",
      "stepType": "pForEach",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:for-each"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": false
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true,
          "portSequence": true
        }
      ],
      "stepOption": [
        {
          "name": "code",
          "required": true
        },
        {
          "name": "code-prefix"
        },
        {
          "name": "code-namespace"
        }
      ]
    },
    {
      "stepGroup": "xproc.Compound",
      "stepType": "pViewport",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:viewport"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": false
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true,
          "portSequence": true
        }
      ],
      "stepOption": [
        {
          "name": "code",
          "required": true
        },
        {
          "name": "code-prefix"
        },
        {
          "name": "code-namespace"
        }
      ]
    },
    {
      "stepGroup": "xproc.Compound",
      "stepType": "pTryCatch",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:try-catch"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": false
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true,
          "portSequence": true
        }
      ],
      "stepOption": [
        {
          "name": "code",
          "required": true
        },
        {
          "name": "code-prefix"
        },
        {
          "name": "code-namespace"
        }
      ]
    },
    {
      "stepGroup": "xproc.Compound",
      "stepType": "pChoose",
      "inPorts": [
        "source"
      ],
      "outPorts": [
        "result"
      ],
      "attrs": {
        ".label": {
          "text": "p:choose"
        }
      },
      "portData": [
        {
          "portId": "source",
          "portGroup": "in",
          "portPrimary": false
        },
        {
          "portId": "result",
          "portGroup": "out",
          "portPrimary": true,
          "portSequence": true
        }
      ],
      "stepOption": [
        {
          "name": "code",
          "required": true
        },
        {
          "name": "code-prefix"
        },
        {
          "name": "code-namespace"
        }
      ]
    }
  ]
}