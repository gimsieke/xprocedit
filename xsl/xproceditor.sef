<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="30" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="true">
 <co id="0" vis="PUBLIC" binds="">
  <globalParam name="Q{}json" type="item()" line="14" module="xproceditor-noninteractive.xsl" visibility="PUBLIC" flags="i" jsAcceptor="return val;" jsCardCheck="function c(n) {return n==1;};"/>
 </co>
 <co id="1" binds="">
  <template name="Q{}connections" flags="os" line="329" module="xproceditor-noninteractive.xsl" slots="1">
   <sequence role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="330">
    <param name="Q{}connections" slot="0" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)*">
     <empty role="select"/>
     <treat role="conversion" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="8|0|XTTE0590|connections">
      <supplied slot="0"/>
     </treat>
    </param>
    <forEachGroup line="331" algorithm="by">
     <varRef role="select" name="connections" slot="0"/>
     <data role="key">
      <slash>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}port)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='port';"/>
      </slash>
     </data>
     <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
     <compElem role="content" line="332">
      <str role="name" val="p:input"/>
      <sequence role="content" line="333">
       <att name="port" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <slash>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}port)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='port';"/>
           </slash>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </att>
       <forEach line="334">
        <currentGroup/>
        <elem xmlns:p="http://www.w3.org/ns/xproc" line="335" name="p:pipe" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="c p">
         <sequence>
          <att name="step" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='source';"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
              </slash>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="port" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='source';"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}port)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='port';"/>
              </slash>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
         </sequence>
        </elem>
       </forEach>
      </sequence>
     </compElem>
    </forEachGroup>
   </sequence>
  </template>
 </co>
 <co id="2" binds="">
  <globalVariable name="Q{}serialization-params" type="element(Q{http://www.w3.org/2010/xslt-xquery-serialization}serialization-parameters)" line="159" module="xproceditor-noninteractive.xsl" visibility="PRIVATE" jsAcceptor="function test(item) {function a() {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2010/xslt-xquery-serialization'&amp;&amp;q.local==='serialization-parameters';};function b() {function a() {var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2010/xslt-xquery-serialization'&amp;&amp;q.local==='serialization-parameters';};function b() {return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;};return a()&amp;&amp;b();};return a()&amp;&amp;b();};if (test(val)) {return val;} else {throw SaxonJS.XError('Conversion failed', 'XTTE0590');}" jsCardCheck="function c(n) {return n==1;};">
   <treat defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="161" as="element(Q{http://www.w3.org/2010/xslt-xquery-serialization}serialization-parameters)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2010/xslt-xquery-serialization'&amp;&amp;q.local==='serialization-parameters';" diag="3|0|XTTE0570|serialization-params">
    <elem xmlns:output="http://www.w3.org/2010/xslt-xquery-serialization" name="output:serialization-parameters" nsuri="http://www.w3.org/2010/xslt-xquery-serialization" namespaces="c p">
     <sequence>
      <elem name="output:indent" nsuri="http://www.w3.org/2010/xslt-xquery-serialization" flags="l" namespaces="c p">
       <att name="value" flags="l">
        <str val="yes"/>
       </att>
      </elem>
      <elem line="162" name="output:omit-xml-declaration" nsuri="http://www.w3.org/2010/xslt-xquery-serialization" flags="l" namespaces="c p">
       <att name="value" flags="l">
        <str val="no"/>
       </att>
      </elem>
     </sequence>
    </elem>
   </treat>
  </globalVariable>
 </co>
 <co id="3" binds="4 5 6 7">
  <template name="Q{}create-xpl-noninteractive" flags="os" line="29" module="xproceditor-noninteractive.xsl" slots="6">
   <sequence role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="30">
    <param name="Q{}graph-as-json" slot="0" flags="i" as="xs:string">
     <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|graph-as-json">
      <check card="1" diag="8|0|XTTE0590|graph-as-json">
       <cvUntyped to="xs:string">
        <data>
         <supplied slot="0"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <param line="31" name="Q{}retain-layout" slot="1" as="xs:boolean">
     <false role="select"/>
     <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|retain-layout">
      <check card="1" diag="8|0|XTTE0590|retain-layout">
       <cvUntyped to="xs:boolean">
        <data>
         <supplied slot="1"/>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </param>
    <let line="34" var="graph" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}array))" slot="2" eval="7">
     <treat as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}array))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|graph">
      <check card="1" diag="3|0|XTTE0570|graph">
       <fn name="json-to-xml">
        <varRef name="graph-as-json" slot="0"/>
       </fn>
      </check>
     </treat>
     <let line="36" var="simplify-json-representation" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" slot="3" eval="7">
      <treat line="38" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|simplify-json-representation">
       <doc>
        <applyT mode="Q{}simplify-json-representation" bSlot="0">
         <varRef role="select" name="graph" slot="2"/>
         <withParam name="Q{}retain-layout" flags="t" as="xs:boolean">
          <varRef line="39" name="retain-layout" slot="1"/>
         </withParam>
        </applyT>
       </doc>
      </treat>
      <let line="44" var="xprocify" as="document-node()" slot="4" eval="7">
       <doc line="45" validation="preserve">
        <applyT mode="Q{}xprocify" bSlot="1">
         <varRef role="select" name="simplify-json-representation" slot="3"/>
        </applyT>
       </doc>
       <let line="48" var="clean" as="document-node()" slot="5" eval="7">
        <doc line="49" validation="preserve">
         <applyT mode="Q{}clean" bSlot="2">
          <varRef role="select" name="xprocify" slot="4"/>
         </applyT>
        </doc>
        <sequence line="52">
         <choose>
          <gc op="=" card="1:1" comp="CCC">
           <gVarRef name="Q{}debug" bSlot="3"/>
           <str val="true"/>
          </gc>
          <sequence line="53">
           <message>
            <sequence role="select">
             <str val="########JSON GRAPH: "/>
             <varRef name="graph-as-json" slot="0"/>
            </sequence>
            <str role="terminate" val="no"/>
            <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
           </message>
           <message line="54">
            <sequence role="select">
             <str val="########XML GRAPH: "/>
             <fn name="serialize">
              <varRef name="graph" slot="2"/>
             </fn>
            </sequence>
            <str role="terminate" val="no"/>
            <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
           </message>
           <message line="55">
            <sequence role="select">
             <str val="########SIMPLIFY: "/>
             <fn name="serialize">
              <varRef name="simplify-json-representation" slot="3"/>
             </fn>
            </sequence>
            <str role="terminate" val="no"/>
            <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
           </message>
           <message line="56">
            <sequence role="select">
             <str val="########XPROCIFY: "/>
             <fn name="serialize">
              <varRef name="xprocify" slot="4"/>
             </fn>
            </sequence>
            <str role="terminate" val="no"/>
            <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
           </message>
          </sequence>
         </choose>
         <varRef line="61" name="clean" slot="5"/>
        </sequence>
       </let>
      </let>
     </let>
    </let>
   </sequence>
  </template>
 </co>
 <co id="8" binds="">
  <function name="Q{bogo:my}index-of" line="370" module="xproceditor-noninteractive.xsl" eval="7" flags="pU" as="xs:integer" slots="2">
   <arg name="seq" as="node()*"/>
   <arg name="srch" as="node()*"/>
   <check role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="373" card="1" diag="5|0|XTTE0780|my:index-of">
    <fn name="index-of">
     <slash>
      <varRef name="seq" slot="0"/>
      <fn name="generate-id">
       <dot type="node()"/>
      </fn>
     </slash>
     <check card="1" diag="0|1||fn:index-of">
      <slash>
       <varRef name="srch" slot="1"/>
       <fn name="generate-id">
        <dot type="node()"/>
       </fn>
      </slash>
     </check>
    </fn>
   </check>
  </function>
 </co>
 <co id="9" binds="10 11">
  <template name="Q{}process-subpipeline" flags="os" line="186" module="xproceditor-noninteractive.xsl" slots="2">
   <let role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="188" var="to-be-processed" as="element()*" slot="0" eval="3">
    <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|to-be-processed">
     <filter flags="b">
      <fn name="key">
       <str val="step-by-id"/>
       <data>
        <slash>
         <slash simple="1">
          <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
           <dot flags="a"/>
          </treat>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}embeds)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='embeds';"/>
         </slash>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}value)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='value';"/>
        </slash>
       </data>
      </fn>
      <gc op="=" card="N:1" comp="CCC">
       <literal count="3">
        <str val="xproc.Atomic"/>
        <str val="xproc.Compound"/>
        <str val="xproc.Variable"/>
       </literal>
       <fn name="local-name">
        <dot type="node()"/>
       </fn>
      </gc>
     </filter>
    </treat>
    <let line="230" var="plan-with-positions" as="element(Q{http://www.w3.org/2005/xpath-functions}plan)" slot="1" eval="7">
     <treat line="231" as="element(Q{http://www.w3.org/2005/xpath-functions}plan)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';" diag="3|0|XTTE0570|plan-with-positions">
      <check card="1" diag="3|0|XTTE0570|plan-with-positions">
       <applyT mode="Q{}plan-add-position" bSlot="0">
        <treat role="select" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="192" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|plan">
         <doc>
          <elem name="plan" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl" namespaces="c p">
           <forEachGroup algorithm="by">
            <ufCall role="select" name="Q{bogo:my}plan" tailCall="false" bSlot="1" eval="11 4">
             <sequence>
              <treat as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="0|0||my:plan">
               <dot flags="a"/>
              </treat>
              <varRef name="to-be-processed" slot="0"/>
             </sequence>
             <check card="1" diag="0|1||my:plan">
              <cvUntyped to="xs:string">
               <data>
                <slash simple="1">
                 <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
                  <dot flags="a"/>
                 </treat>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                </slash>
               </data>
              </cvUntyped>
             </check>
            </ufCall>
            <attVal role="key" name="Q{}id" chk="0"/>
            <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
            <dot role="content" line="193" type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
           </forEachGroup>
          </elem>
         </doc>
        </treat>
       </applyT>
      </check>
     </treat>
     <applyT line="243" flags="ct" bSlot="-1">
      <filter role="select" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="236" flags="b">
       <slash>
        <slash simple="1">
         <treat as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}plan))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|sorted-plan-items">
          <doc>
           <elem name="plan" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl" namespaces="c p">
            <sort>
             <slash role="select" simple="1">
              <varRef name="plan-with-positions" slot="1"/>
              <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
             </slash>
             <sortKey line="237" comp="DecSC">
              <cast role="select" as="xs:integer" emptiable="1">
               <data>
                <first>
                 <sequence>
                  <slash>
                   <filter flags="b">
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                    <fn name="empty">
                     <axis module="xproceditor-noninteractive.xsl" line="237" name="following-sibling" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                    </fn>
                   </filter>
                   <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name==='pos'"/>
                  </slash>
                  <axis name="attribute" nodeTest="attribute(Q{}pos)" jsTest="return item.name==='pos'"/>
                 </sequence>
                </first>
               </data>
              </cast>
              <str role="order" val="ascending"/>
              <str role="lang" val=""/>
              <str role="caseOrder" val="#default"/>
              <str role="stable" val="yes"/>
              <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
             </sortKey>
             <sortKey line="238" comp="DESC|DecSC">
              <cast role="select" as="xs:integer" emptiable="0">
               <atomSing diag="2|0||cast as">
                <first>
                 <sequence>
                  <slash>
                   <filter flags="b">
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                    <fn name="empty">
                     <axis module="xproceditor-noninteractive.xsl" line="238" name="following-sibling" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='sort-before';"/>
                    </fn>
                   </filter>
                   <axis name="attribute" nodeTest="attribute(Q{}distance)" jsTest="return item.name==='distance'"/>
                  </slash>
                  <int val="0"/>
                 </sequence>
                </first>
               </atomSing>
              </cast>
              <str role="order" val="descending"/>
              <str role="lang" val=""/>
              <str role="caseOrder" val="#default"/>
              <str role="stable" val="yes"/>
              <str role="collation" val="http://www.w3.org/2005/xpath-functions/collation/codepoint"/>
             </sortKey>
            </sort>
           </elem>
          </doc>
         </treat>
         <axis ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="243" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan';"/>
        </slash>
        <axis ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="243" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
       </slash>
       <fn ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="243" name="exists">
        <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
       </fn>
      </filter>
      <withParam name="Q{}simplified-graph" flags="t" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))">
       <treat line="244" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="8|0|XTTE0590|simplified-graph">
        <fn name="root">
         <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="0|0||fn:root">
          <dot flags="a"/>
         </treat>
        </fn>
       </treat>
      </withParam>
      <withParam name="Q{}container-id" flags="t" as="xs:string">
       <check line="245" card="1" diag="8|0|XTTE0590|container-id">
        <cvUntyped to="xs:string">
         <data>
          <slash simple="1">
           <treat as="node()" jsTest="return SaxonJS.U.isNode(item);" diag="14|3|XPTY0020|">
            <dot flags="a"/>
           </treat>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
          </slash>
         </data>
        </cvUntyped>
       </check>
      </withParam>
     </applyT>
    </let>
   </let>
  </template>
 </co>
 <co id="5" binds="9 1 12 9 13">
  <mode name="Q{}xprocify" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-10.0" seq="6" rank="0" minImp="0" slots="0" flags="s" line="483" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="484" flags="ct" bSlot="-1">
     <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="5" rank="1" minImp="0" slots="1" flags="s" line="450" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Option';"/>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="451">
     <param name="Q{}global" slot="0" as="xs:boolean">
      <false role="select"/>
      <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|global">
       <check card="1" diag="8|0|XTTE0590|global">
        <cvUntyped to="xs:boolean">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="453">
      <vc op="ne" onEmpty="1" comp="CCC">
       <atomSing card="?" diag="1|0||eq">
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
       </atomSing>
       <str val="unset"/>
      </vc>
      <choose line="455">
       <varRef name="global" slot="0"/>
       <choose line="457">
        <fn name="matches">
         <check card="?" diag="0|0||fn:matches">
          <cvUntyped to="xs:string">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
           </data>
          </cvUntyped>
         </check>
         <str val="^\{([^}]+)\}$"/>
         <str val=""/>
        </fn>
        <elem xmlns:p="http://www.w3.org/ns/xproc" line="458" name="p:option" nsuri="http://www.w3.org/ns/xproc" namespaces="c p">
         <sequence>
          <att name="name" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionName)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionName';"/>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att line="459" name="select" flags="l">
           <fn name="replace">
            <check card="?" diag="0|0||fn:replace">
             <cvUntyped to="xs:string">
              <data>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
              </data>
             </cvUntyped>
            </check>
            <str val="^\{([^}]+)\}$"/>
            <str val="$1"/>
            <str val=""/>
           </fn>
          </att>
         </sequence>
        </elem>
        <true/>
        <elem xmlns:p="http://www.w3.org/ns/xproc" line="463" name="p:option" nsuri="http://www.w3.org/ns/xproc" namespaces="c p">
         <sequence>
          <att name="name" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionName)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionName';"/>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <att name="select" flags="l">
           <fn name="concat">
            <str val="'"/>
            <atomSing card="?" diag="0|1||fn:concat">
             <dot type="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Option)"/>
            </atomSing>
            <str val="'"/>
           </fn>
          </att>
         </sequence>
        </elem>
       </choose>
       <fn line="469" name="matches">
        <check card="?" diag="0|0||fn:matches">
         <cvUntyped to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
          </data>
         </cvUntyped>
        </check>
        <str val="^\{([^}]+)\}$"/>
        <str val=""/>
       </fn>
       <elem xmlns:p="http://www.w3.org/ns/xproc" line="470" name="p:with-option" nsuri="http://www.w3.org/ns/xproc" namespaces="c p">
        <sequence>
         <att name="name" flags="l">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionName)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionName';"/>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <att line="471" name="select" flags="l">
          <fn name="replace">
           <check card="?" diag="0|0||fn:replace">
            <cvUntyped to="xs:string">
             <data>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
             </data>
            </cvUntyped>
           </check>
           <str val="^\{([^}]+)\}$"/>
           <str val="$1"/>
           <str val=""/>
          </fn>
         </att>
        </sequence>
       </elem>
       <true/>
       <compAtt line="475">
        <fn role="name" name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionName)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionName';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
        <fn role="select" name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}optionValue)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='optionValue';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </compAtt>
      </choose>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="2" minImp="0" slots="0" flags="s" line="179" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="179" op="=" card="N:1" comp="CCC">
      <data>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepType';"/>
      </data>
      <str val="pipeline"/>
     </gc>
    </p.withPredicate>
    <callT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="180" name="process-subpipeline" bSlot="0" flags="t"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="0" rank="1" minImp="0" slots="0" flags="s" line="175" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}doc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';"/>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="176" flags="ct" bSlot="-1">
     <filter role="select" flags="b">
      <slash>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-array';"/>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
      </slash>
      <gc op="=" card="N:1" comp="CCC">
       <data>
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepType';"/>
       </data>
       <str val="pipeline"/>
      </gc>
     </filter>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="2" minImp="0" slots="5" flags="s" line="268" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="268" name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
     </fn>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="269">
     <param name="Q{}simplified-graph" slot="0" flags="ti" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))">
      <treat role="conversion" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="8|0|XTTE0590|simplified-graph">
       <check card="1" diag="8|0|XTTE0590|simplified-graph">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="270" name="Q{}container-id" slot="1" flags="ti" as="xs:string">
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|container-id">
       <check card="1" diag="8|0|XTTE0590|container-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="272" var="corresponding" as="element()" slot="2" eval="7">
      <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|corresponding">
       <check card="1" diag="3|0|XTTE0570|corresponding">
        <filter flags="b">
         <fn name="key">
          <str val="step-by-id"/>
          <attVal name="Q{}id" chk="0"/>
          <varRef name="simplified-graph" slot="0"/>
         </fn>
         <gc op="=" card="N:1" comp="CCC">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
          </data>
          <varRef name="container-id" slot="1"/>
         </gc>
        </filter>
       </check>
      </treat>
      <sequence line="273">
       <compElem>
        <fn role="name" name="string-join">
         <convert from="xs:anyAtomicType" to="xs:string">
          <data>
           <first>
            <sequence>
             <slash simple="1">
              <varRef name="corresponding" slot="2"/>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}text)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='text';"/>
             </slash>
             <str val="p:declare-step"/>
            </sequence>
           </first>
          </data>
         </convert>
         <str val=" "/>
        </fn>
        <sequence role="content" line="274">
         <att name="name" flags="l">
          <convert from="xs:untypedAtomic" to="xs:string">
           <attVal name="Q{}id" chk="0"/>
          </convert>
         </att>
         <applyT line="275" flags="c" bSlot="-1">
          <fn role="select" name="key">
           <str val="options"/>
           <attVal name="Q{}id" chk="0"/>
           <varRef name="simplified-graph" slot="0"/>
          </fn>
         </applyT>
         <applyT line="276" flags="c" bSlot="-1">
          <slash role="select" simple="1">
           <varRef name="corresponding" slot="2"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
          </slash>
         </applyT>
         <callT line="277" name="connections" bSlot="1">
          <withParam name="Q{}connections" flags="c" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)*">
           <treat line="280" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="8|0|XTTE0590|connections">
            <filter flags="b">
             <filter flags="b">
              <fn name="key">
               <str val="connect-target"/>
               <data>
                <slash simple="1">
                 <varRef name="corresponding" slot="2"/>
                 <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                </slash>
               </data>
               <varRef name="simplified-graph" slot="0"/>
              </fn>
              <fn name="not">
               <ufCall name="Q{bogo:my}is-primary-connection" tailCall="false" bSlot="2" eval="7">
                <treat as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="0|0||my:is-primary-connection">
                 <dot type="node()"/>
                </treat>
               </ufCall>
              </fn>
             </filter>
             <gc op="=" card="N:1" comp="CCC">
              <data>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
              </data>
              <varRef name="container-id" slot="1"/>
             </gc>
            </filter>
           </treat>
          </withParam>
         </callT>
         <choose line="282">
          <gc op="=" card="N:1" comp="CCC">
           <data>
            <slash simple="1">
             <varRef name="corresponding" slot="2"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}text)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='text';"/>
            </slash>
           </data>
           <str val="p:xslt"/>
          </gc>
          <elem xmlns:p="http://www.w3.org/ns/xproc" line="284" name="p:input" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="c p">
           <sequence>
            <att name="port" flags="l">
             <str val="parameter"/>
            </att>
            <elem name="p:empty" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="c p">
             <empty/>
            </elem>
           </sequence>
          </elem>
         </choose>
         <let line="288" var="step-name" as="xs:string" slot="3" eval="7">
          <check card="1" diag="3|0|XTTE0570|step-name">
           <cvUntyped to="xs:string">
            <attVal name="Q{}id" chk="0"/>
           </cvUntyped>
          </check>
          <forEach line="289">
           <check line="287" card="?" diag="3|0|XTTE0570|subpipeline">
            <docOrder intra="1">
             <slash>
              <fn name="key">
               <str val="step-by-id"/>
               <attVal name="Q{}id" chk="0"/>
               <varRef name="simplified-graph" slot="0"/>
              </fn>
              <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
             </slash>
            </docOrder>
           </check>
           <let line="290" var="prelim" as="element()" slot="4" eval="7">
            <treat line="291" as="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;" diag="3|0|XTTE0570|prelim">
             <check card="1" diag="3|0|XTTE0570|prelim">
              <callT name="process-subpipeline" bSlot="3"/>
             </check>
            </treat>
            <applyT line="293" mode="Q{}xprocify-post" bSlot="4">
             <varRef role="select" name="prelim" slot="4"/>
             <withParam name="Q{}step-name" flags="t" as="xs:string">
              <varRef line="294" name="step-name" slot="3"/>
             </withParam>
            </applyT>
           </let>
          </forEach>
         </let>
        </sequence>
       </compElem>
       <choose line="300">
        <and op="and">
         <fn name="empty">
          <slash>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
           <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
          </slash>
         </fn>
         <gc op="=" card="N:1" comp="CCC">
          <data>
           <slash>
            <filter flags="b">
             <slash>
              <slash simple="1">
               <varRef name="corresponding" slot="2"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
              </slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-map';"/>
             </slash>
             <gc op="=" card="N:1" comp="CCC">
              <data>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portGroup)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portGroup';"/>
              </data>
              <str val="out"/>
             </gc>
            </filter>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portPrimary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portPrimary';"/>
           </slash>
          </data>
          <str val="true"/>
         </gc>
        </and>
        <elem xmlns:p="http://www.w3.org/ns/xproc" name="p:sink" nsuri="http://www.w3.org/ns/xproc" namespaces="c p">
         <empty/>
        </elem>
       </choose>
       <applyT line="303" flags="ct" bSlot="-1">
        <first role="select">
         <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
        </first>
       </applyT>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="2" minImp="0" slots="3" flags="s" line="249" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
     <axis defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="249" name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="250">
     <param name="Q{}simplified-graph" slot="0" flags="ti" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))">
      <treat role="conversion" as="document-node(element(Q{http://www.w3.org/2005/xpath-functions}doc))" jsTest="function e(item) {var q=SaxonJS.U.nameOfNode(item); return q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='doc';};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="8|0|XTTE0590|simplified-graph">
       <check card="1" diag="8|0|XTTE0590|simplified-graph">
        <supplied slot="0"/>
       </check>
      </treat>
     </param>
     <param line="251" name="Q{}container-id" slot="1" flags="ti" as="xs:string">
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|container-id">
       <check card="1" diag="8|0|XTTE0590|container-id">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="1"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="253" var="corresponding" as="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" slot="2" eval="7">
      <check card="1" diag="3|0|XTTE0570|corresponding">
       <docOrder intra="1">
        <slash>
         <filter flags="b">
          <fn name="key">
           <str val="step-by-id"/>
           <attVal name="Q{}id" chk="0"/>
           <varRef name="simplified-graph" slot="0"/>
          </fn>
          <gc op="=" card="N:1" comp="CCC">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
           </data>
           <varRef name="container-id" slot="1"/>
          </gc>
         </filter>
         <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
        </slash>
       </docOrder>
      </check>
      <compElem line="254">
       <fn role="name" name="string-join">
        <convert from="xs:anyAtomicType" to="xs:string">
         <data>
          <first>
           <sequence>
            <slash simple="1">
             <varRef name="corresponding" slot="2"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}text)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='text';"/>
            </slash>
            <str val="p:declare-step"/>
           </sequence>
          </first>
         </data>
        </convert>
        <str val=" "/>
       </fn>
       <sequence role="content" line="255">
        <choose>
         <fn name="empty">
          <slash simple="1">
           <varRef name="corresponding" slot="2"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}text)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='text';"/>
          </slash>
         </fn>
         <att line="256" name="version" flags="l">
          <str val="1.0"/>
         </att>
        </choose>
        <applyT line="258" flags="c" bSlot="-1">
         <slash role="select" simple="1">
          <varRef name="corresponding" slot="2"/>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
         </slash>
        </applyT>
        <applyT line="260" flags="c" bSlot="-1">
         <filter role="select" flags="b">
          <fn name="key">
           <str val="options"/>
           <data>
            <slash simple="1">
             <varRef name="corresponding" slot="2"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
            </slash>
           </data>
           <varRef name="simplified-graph" slot="0"/>
          </fn>
          <gc op="=" card="N:1" comp="CCC">
           <data>
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}paren)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='paren';"/>
           </data>
           <varRef name="container-id" slot="1"/>
          </gc>
         </filter>
         <withParam name="Q{}global" as="xs:boolean">
          <fn line="262" name="exists">
           <filter flags="b">
            <slash simple="1">
             <varRef name="corresponding" slot="2"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepType)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepType';"/>
            </slash>
            <vc op="eq" comp="CCC">
             <cast as="xs:string" emptiable="0">
              <data>
               <dot type="element(Q{http://www.w3.org/2005/xpath-functions}stepType)"/>
              </data>
             </cast>
             <str val="pipeline"/>
            </vc>
           </filter>
          </fn>
         </withParam>
        </applyT>
        <applyT line="264" flags="c" bSlot="-1">
         <first role="select">
          <axis name="following-sibling" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         </first>
        </applyT>
       </sequence>
      </compElem>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="4" rank="3" minImp="0" slots="3" flags="s" line="428" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-map';"/>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
      <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Pipeline)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Pipeline';"/>
     </p.withUpper>
    </p.withUpper>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="429">
     <param name="Q{}pipe-step-name" slot="0" flags="t" as="xs:string?">
      <empty role="select"/>
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|pipe-step-name">
       <check card="?" diag="8|0|XTTE0590|pipe-step-name">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="432" var="port-primary" as="xs:string?" slot="1" eval="7">
      <check card="?" diag="3|0|XTTE0570|port-primary">
       <cvUntyped to="xs:string">
        <data>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portPrimary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portPrimary';"/>
        </data>
       </cvUntyped>
      </check>
      <let line="433" var="port-sequence" as="xs:string?" slot="2" eval="7">
       <check card="?" diag="3|0|XTTE0570|port-sequence">
        <cvUntyped to="xs:string">
         <data>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portSequence)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portSequence';"/>
         </data>
        </cvUntyped>
       </check>
       <compElem line="434">
        <choose role="name">
         <vc op="eq" onEmpty="0" comp="CCC">
          <check line="430" card="1" diag="3|0|XTTE0570|port-type">
           <cvUntyped to="xs:string">
            <data>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portGroup)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portGroup';"/>
            </data>
           </cvUntyped>
          </check>
          <str val="in"/>
         </vc>
         <str val="p:input"/>
         <true/>
         <str val="p:output"/>
        </choose>
        <sequence role="content" line="435">
         <att name="port" flags="l">
          <fn name="string-join">
           <convert from="xs:untypedAtomic" to="xs:string">
            <data>
             <axis line="431" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portId';"/>
            </data>
           </convert>
           <str val=" "/>
          </fn>
         </att>
         <choose line="436">
          <varRef name="port-primary" slot="1"/>
          <att line="437" name="primary" flags="l">
           <varRef name="port-primary" slot="1"/>
          </att>
         </choose>
         <choose line="439">
          <varRef name="port-sequence" slot="2"/>
          <att line="440" name="sequence" flags="l">
           <varRef name="port-sequence" slot="2"/>
          </att>
         </choose>
         <choose line="442">
          <varRef name="pipe-step-name" slot="0"/>
          <elem xmlns:p="http://www.w3.org/ns/xproc" line="443" name="p:pipe" nsuri="http://www.w3.org/ns/xproc" flags="l" namespaces="c p">
           <sequence>
            <att name="step" flags="l">
             <varRef name="pipe-step-name" slot="0"/>
            </att>
            <att name="port" flags="l">
             <str val="result"/>
            </att>
           </sequence>
          </elem>
         </choose>
        </sequence>
       </compElem>
      </let>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-10.0" seq="6" rank="0" minImp="0" slots="0" flags="s" line="483" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="484" flags="ct" bSlot="-1">
     <axis role="select" name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
    </applyT>
   </templateRule>
  </mode>
 </co>
 <co id="13" binds="">
  <mode name="Q{}xprocify-post" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="3" rank="2" minImp="0" slots="1" flags="s" line="312" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.withPredicate>
      <p.withPredicate>
       <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
       <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="312" op="=" card="M:N" comp="CCC">
        <fn name="name">
         <dot type="element()"/>
        </fn>
        <literal count="2">
         <str val="p:input"/>
         <str val="p:with-input"/>
        </literal>
       </gc>
      </p.withPredicate>
      <slash defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="312">
       <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
       <axis name="attribute" nodeTest="attribute(Q{}step)" jsTest="return item.name==='step'"/>
      </slash>
     </p.withPredicate>
     <p.withUpper axis="parent" upFirst="false">
      <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
      <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}for-each)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='for-each';"/>
     </p.withUpper>
    </p.withUpper>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="313">
     <param name="Q{}step-name" slot="0" flags="ti" as="xs:string">
      <treat role="conversion" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|step-name">
       <check card="1" diag="8|0|XTTE0590|step-name">
        <cvUntyped to="xs:string">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="314">
      <fn name="not">
       <gc op="=" card="N:1" comp="CCC">
        <data>
         <slash>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/ns/xproc}pipe)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='pipe';"/>
          <axis name="attribute" nodeTest="attribute(Q{}step)" jsTest="return item.name==='step'"/>
         </slash>
        </data>
        <varRef name="step-name" slot="0"/>
       </gc>
      </fn>
      <nextMatch line="315" flags="t"/>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="65" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="67" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="s" line="306" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/ns/xproc}for-each)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='for-each';"/>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="307" flags="cti" bSlot="-1">
     <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="2" rank="2" minImp="0" slots="0" flags="s" line="310" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='input';"/>
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}for-each)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='for-each';"/>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="65" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="67" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="12" binds="14 14">
  <function name="Q{bogo:my}is-primary-connection" line="414" module="xproceditor-noninteractive.xsl" eval="7" flags="pU" as="xs:boolean" slots="1">
   <arg name="connection" as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)"/>
   <and role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="418" op="and">
    <gc op="=" card="N:1" comp="CCC">
     <data>
      <slash simple="1">
       <ufCall name="Q{bogo:my}portData-for-linkEnd" tailCall="false" bSlot="0" eval="4">
        <check card="1" diag="0|0||my:portData-for-linkEnd">
         <slash simple="1">
          <varRef name="connection" slot="0"/>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
         </slash>
        </check>
       </ufCall>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portPrimary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portPrimary';"/>
      </slash>
     </data>
     <str val="true"/>
    </gc>
    <gc op="=" card="N:1" comp="CCC">
     <data>
      <slash simple="1">
       <ufCall name="Q{bogo:my}portData-for-linkEnd" tailCall="false" bSlot="1" eval="4">
        <check card="1" diag="0|0||my:portData-for-linkEnd">
         <slash simple="1">
          <varRef name="connection" slot="0"/>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='source';"/>
         </slash>
        </check>
       </ufCall>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portPrimary)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portPrimary';"/>
      </slash>
     </data>
     <str val="true"/>
    </gc>
   </and>
  </function>
 </co>
 <co id="10" binds="15">
  <mode name="Q{}plan-add-position" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="65" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="67" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="s" line="341" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="343" flags="cin">
     <sequence role="content">
      <applyT flags="c" bSlot="-1">
       <axis role="select" name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      </applyT>
      <att line="344" name="pos" flags="l">
       <convert from="xs:integer" to="xs:string">
        <check line="373" card="1" diag="5|0|XTTE0780|my:index-of">
         <fn name="index-of">
          <slash>
           <slash line="344">
            <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
            <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
           </slash>
           <fn name="generate-id">
            <dot type="element()"/>
           </fn>
          </slash>
          <slash>
           <dot line="344" type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
           <fn name="generate-id">
            <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
           </fn>
          </slash>
         </fn>
        </check>
       </convert>
      </att>
      <choose line="345">
       <fn name="exists">
        <filter flags="b">
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
         <fn name="exists">
          <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
         </fn>
        </filter>
       </fn>
       <ufCall line="346" name="Q{bogo:my}plan-distance" tailCall="false" bSlot="0" eval="7 0">
        <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
        <int val="1"/>
       </ufCall>
      </choose>
      <applyT line="348" flags="ci" bSlot="-1">
       <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
      </applyT>
     </sequence>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="65" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="67" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="16" binds="0">
  <globalVariable name="Q{http://saxon.sf.net/generated-variable}gg1549104325" type="xs:string?" line="24" module="xproceditor-noninteractive.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <treat defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="24" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="0|0||fn:unparsed-text">
    <check card="?" diag="0|0||fn:unparsed-text">
     <cvUntyped to="xs:string">
      <data>
       <gVarRef name="Q{}json" bSlot="0"/>
      </data>
     </cvUntyped>
    </check>
   </treat>
  </globalVariable>
 </co>
 <co id="11" binds="12 11">
  <function name="Q{bogo:my}plan" line="376" module="xproceditor-noninteractive.xsl" eval="3" flags="pU" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)*" slots="2">
   <arg name="immediates" as="element()*"/>
   <arg name="container-id" as="xs:string"/>
   <sequence role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="380">
    <forEach>
     <varRef name="immediates" slot="0"/>
     <elem ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="381" name="plan-item" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="c p">
      <sequence>
       <att name="id" flags="l">
        <fn name="string-join">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
          </data>
         </convert>
         <str val=" "/>
        </fn>
       </att>
       <choose line="382">
        <gc op="=" card="N:1" comp="CCC">
         <data>
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
         </data>
         <varRef name="container-id" slot="1"/>
        </gc>
        <att line="383" name="container" flags="l">
         <str val="true"/>
        </att>
       </choose>
       <forEach line="385">
        <filter flags="b">
         <fn name="key">
          <str val="connect"/>
          <data>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
          </data>
         </fn>
         <gc op="=" card="1:1" comp="CCC">
          <data>
           <first>
            <sequence>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
            </sequence>
           </first>
          </data>
          <varRef name="container-id" slot="1"/>
         </gc>
        </filter>
        <elem line="386" name="connection" nsuri="http://www.w3.org/2005/xpath-functions" flags="dl" namespaces="c p">
         <sequence>
          <att name="target" flags="l">
           <fn name="string-join">
            <convert from="xs:untypedAtomic" to="xs:string">
             <data>
              <slash>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
              </slash>
             </data>
            </convert>
            <str val=" "/>
           </fn>
          </att>
          <choose line="387">
           <ufCall name="Q{bogo:my}is-primary-connection" tailCall="false" bSlot="0" eval="7">
            <treat as="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';" diag="0|0||my:is-primary-connection">
             <dot type="node()"/>
            </treat>
           </ufCall>
           <att line="388" name="primary" flags="l">
            <str val="true"/>
           </att>
          </choose>
          <choose line="390">
           <gc op="=" card="N:1" comp="CCC">
            <data>
             <slash>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
              <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
             </slash>
            </data>
            <varRef name="container-id" slot="1"/>
           </gc>
           <att line="391" name="container" flags="l">
            <str val="true"/>
           </att>
          </choose>
         </sequence>
        </elem>
       </forEach>
      </sequence>
     </elem>
    </forEach>
    <choose line="397">
     <fn name="exists">
      <varRef name="immediates" slot="0"/>
     </fn>
     <ufCall line="402" name="Q{bogo:my}plan" tailCall="false" bSlot="1" eval="4 6">
      <treat as="element()" jsTest="return item.nodeType===1;" diag="0|0||my:plan">
       <fn name="key">
        <str val="step-by-id"/>
        <data>
         <docOrder intra="1">
          <slash>
           <docOrder intra="1">
            <slash>
             <treat line="401" as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|next">
              <filter flags="b">
               <filter flags="b">
                <fn name="key">
                 <str val="connect"/>
                 <data>
                  <docOrder intra="0">
                   <slash>
                    <filter flags="b">
                     <varRef name="immediates" slot="0"/>
                     <fn name="not">
                      <gc op="=" card="N:1" comp="CCC">
                       <data>
                        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                       </data>
                       <varRef name="container-id" slot="1"/>
                      </gc>
                     </fn>
                    </filter>
                    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
                   </slash>
                  </docOrder>
                 </data>
                 <check card="1" diag="0|2||fn:key">
                  <fn name="root">
                   <first>
                    <varRef name="immediates" slot="0"/>
                   </first>
                  </fn>
                 </check>
                </fn>
                <gc op="=" card="N:1" comp="CCC">
                 <data>
                  <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
                 </data>
                 <varRef name="container-id" slot="1"/>
                </gc>
               </filter>
               <fn name="not">
                <gc op="=" card="N:1" comp="CCC">
                 <data>
                  <slash>
                   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
                   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
                  </slash>
                 </data>
                 <varRef name="container-id" slot="1"/>
                </gc>
               </fn>
              </filter>
             </treat>
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
            </slash>
           </docOrder>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
          </slash>
         </docOrder>
        </data>
        <check card="1" diag="0|2||fn:key">
         <fn name="root">
          <first>
           <varRef name="immediates" slot="0"/>
          </first>
         </fn>
        </check>
       </fn>
      </treat>
      <varRef name="container-id" slot="1"/>
     </ufCall>
    </choose>
   </sequence>
  </function>
 </co>
 <co id="6" binds="6">
  <mode name="Q{}clean" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="s" line="493" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
     <p.nodeTest test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    </p.withUpper>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="495" flags="in">
     <sequence role="content">
      <namespace flags="l">
       <str role="name" val="p"/>
       <str role="select" val="http://www.w3.org/ns/xproc"/>
      </namespace>
      <namespace line="496" flags="l">
       <str role="name" val="c"/>
       <str role="select" val="http://www.w3.org/ns/xproc-step"/>
      </namespace>
      <applyT line="497" mode="Q{}clean" bSlot="0">
       <sequence role="select">
        <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
        <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
       </sequence>
      </applyT>
     </sequence>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="0" flags="s" line="487" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="489" flags="in">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="0" rank="1" minImp="0" slots="0" flags="s" line="319" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}input)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='input';"/>
     <p.nodeTest test="element(Q{http://www.w3.org/ns/xproc}for-each)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/ns/xproc'&amp;&amp;q.local==='for-each';"/>
    </p.withUpper>
    <elem xmlns:p="http://www.w3.org/ns/xproc" role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="321" name="p:iteration-source" nsuri="http://www.w3.org/ns/xproc" namespaces="c p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="0" flags="s" line="325" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.withPredicate>
      <p.nodeTest test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
      <vc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="325" op="eq" comp="CCC">
       <cast as="xs:string" emptiable="0">
        <data>
         <dot type="attribute()"/>
        </data>
       </cast>
       <str val="unset"/>
      </vc>
     </p.withPredicate>
     <p.nodeTest test="Q{http://www.w3.org/ns/xproc}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/ns/xproc'"/>
    </p.withUpper>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="2" rank="0" minImp="0" slots="0" flags="s" line="487" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="489" flags="in">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="17" vis="PUBLIC" binds="">
  <globalParam name="Q{}layout" type="xs:string?" line="15" module="xproceditor-noninteractive.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <str val="false"/>
  </globalParam>
 </co>
 <co id="18" binds="">
  <function name="Q{bogo:my}normalize-map-key" line="122" module="xproceditor-noninteractive.xsl" eval="7" flags="pU" as="xs:string" slots="1">
   <arg name="input" as="xs:string"/>
   <choose role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="125">
    <castable as="xs:NCName" emptiable="0">
     <varRef name="input" slot="0"/>
    </castable>
    <varRef line="126" name="input" slot="0"/>
    <true/>
    <fn line="133" name="string-join">
     <sequence>
      <fn name="replace">
       <fn name="substring">
        <varRef name="input" slot="0"/>
        <int val="1"/>
        <int val="1"/>
       </fn>
       <str val="\I"/>
       <str val="_"/>
       <str val=""/>
      </fn>
      <fn name="replace">
       <fn name="substring">
        <varRef name="input" slot="0"/>
        <int val="2"/>
       </fn>
       <str val="\C"/>
       <str val="_"/>
       <str val=""/>
      </fn>
     </sequence>
     <str val=""/>
    </fn>
   </choose>
  </function>
 </co>
 <co id="19" binds="20 2">
  <mode name="Q{http://saxonica.com/ns/interactiveXSLT}click" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="1" prio="0.5" seq="0" rank="0" minImp="0" slots="2" flags="s" line="25" module="xproceditor.xsl">
    <p.nodeSet role="match" type="element()">
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc fn=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="25" name="id">
      <str val="downloadlink"/>
     </fn>
    </p.nodeSet>
    <let role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc fn=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="26" var="pipeline" as="document-node(element())" slot="0" eval="7">
     <treat line="27" as="document-node(element())" jsTest="function e(item) {return item.nodeType===1;};return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9 || item.nodeType===11) &amp;&amp; SaxonJS.U.Axis.child(item).filter(e).next();" diag="3|0|XTTE0570|pipeline">
      <check card="1" diag="3|0|XTTE0570|pipeline">
       <callT name="create-xpl" bSlot="0"/>
      </check>
     </treat>
     <let line="35" var="url" as="xs:string" slot="1" eval="7">
      <treat as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="3|0|XTTE0570|url">
       <check card="1" diag="3|0|XTTE0570|url">
        <cvUntyped to="xs:string">
         <data>
          <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}call" type="item()?">
           <check card="1" diag="0|0||ixsl:call">
            <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}window" type="item()?"/>
           </check>
           <str val="downloadXml"/>
           <arrayBlock>
            <fn name="serialize">
             <varRef name="pipeline" slot="0"/>
             <gVarRef name="Q{}serialization-params" bSlot="1"/>
            </fn>
            <str val="downloadlink"/>
           </arrayBlock>
          </ifCall>
         </data>
        </cvUntyped>
       </check>
      </treat>
      <message line="37">
       <sequence role="select">
        <str val="Download URL: "/>
        <varRef name="url" slot="1"/>
       </sequence>
       <str role="terminate" val="no"/>
       <str role="error" val="Q{http://www.w3.org/2005/xqt-errors}XTMM9000"/>
      </message>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <co id="4" binds="18 18">
  <mode name="Q{}simplify-json-representation" onNo="TC" flags="W" patternSlots="0">
   <templateRule prec="0" prio="1.0" seq="4" rank="2" minImp="0" slots="1" flags="s" line="100" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2005/xpath-functions}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2005/xpath-functions'"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="100" op="=" card="N:1" comp="CCC">
      <literal count="6">
       <str val="size"/>
       <str val="position"/>
       <str val="angle"/>
       <str val="z"/>
       <str val="label"/>
       <str val="markup"/>
      </literal>
      <attVal name="Q{}key" chk="0"/>
     </gc>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="101">
     <param name="Q{}retain-layout" slot="0" flags="t" as="xs:boolean?">
      <empty role="select"/>
      <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|retain-layout">
       <check card="?" diag="8|0|XTTE0590|retain-layout">
        <cvUntyped to="xs:boolean">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <choose line="102">
      <varRef name="retain-layout" slot="0"/>
      <nextMatch line="103" flags="t"/>
     </choose>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="3" rank="1" minImp="0" slots="0" flags="s" line="93" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.withPredicate>
      <p.withPredicate>
       <p.nodeTest test="Q{http://www.w3.org/2005/xpath-functions}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2005/xpath-functions'"/>
       <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="93" name="not">
        <or op="or">
         <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
         <axis name="self" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';"/>
        </or>
       </fn>
      </p.withPredicate>
      <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="93" name="not">
       <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
      </fn>
     </p.withPredicate>
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';"/>
    </p.withUpper>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="95" name="value" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="c p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="1" rank="1" minImp="0" slots="1" flags="s" line="71" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="Q{http://www.w3.org/2005/xpath-functions}*" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1&amp;&amp;q.uri==='http://www.w3.org/2005/xpath-functions'"/>
     <axis defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="71" name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
    </p.withPredicate>
    <let role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="72" var="normalized" as="xs:string" slot="0" eval="7">
     <ufCall name="Q{bogo:my}normalize-map-key" tailCall="false" bSlot="0" eval="7">
      <check card="1" diag="0|0||my:normalize-map-key">
       <cvUntyped to="xs:string">
        <attVal name="Q{}key" chk="0"/>
       </cvUntyped>
      </check>
     </ufCall>
     <compElem line="73">
      <varRef role="name" name="normalized" slot="0"/>
      <sequence role="content" line="74">
       <choose>
        <fn name="not">
         <gc op="=" card="1:1" comp="CCC">
          <attVal name="Q{}key" chk="0"/>
          <varRef name="normalized" slot="0"/>
         </gc>
        </fn>
        <att line="75" name="was" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}key" chk="0"/>
         </convert>
        </att>
       </choose>
       <applyT line="77" flags="ci" bSlot="-1">
        <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
       </applyT>
      </sequence>
     </compElem>
    </let>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="65" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="67" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="8" rank="2" minImp="0" slots="0" flags="s" line="139" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';"/>
     <p.nodeTest test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    </p.withUpper>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="141" name="doc" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="c p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="9" rank="1" minImp="0" slots="0" flags="s" line="146" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}array)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='array';"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="146" name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     </fn>
    </p.withPredicate>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="148" name="anonymous-array" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="c p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="8" rank="2" minImp="0" slots="0" flags="s" line="139" module="xproceditor-noninteractive.xsl">
    <p.withUpper role="match" axis="parent" upFirst="false">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <p.nodeTest test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    </p.withUpper>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="141" name="doc" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="c p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="7" rank="2" minImp="0" slots="0" flags="s" line="120" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="120" op="=" card="N:1" comp="CCC">
      <literal count="3">
       <str val="ports"/>
       <str val="router"/>
       <str val="connector"/>
      </literal>
      <attVal name="Q{}key" chk="0"/>
     </gc>
    </p.withPredicate>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="6" rank="2" minImp="0" slots="0" flags="s" line="116" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="116" op="=" card="1:1" comp="CCC">
      <attVal name="Q{}key" chk="0"/>
      <str val=".label"/>
     </gc>
    </p.withPredicate>
    <applyT role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="117" flags="cti" bSlot="-1">
     <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
    </applyT>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="5" rank="2" minImp="0" slots="2" flags="s" line="107" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <gc defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="107" op="=" card="1:1" comp="CCC">
      <attVal name="Q{}key" chk="0"/>
      <str val="attrs"/>
     </gc>
    </p.withPredicate>
    <sequence role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="108">
     <param name="Q{}retain-layout" slot="0" flags="t" as="xs:boolean?">
      <empty role="select"/>
      <treat role="conversion" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|retain-layout">
       <check card="?" diag="8|0|XTTE0590|retain-layout">
        <cvUntyped to="xs:boolean">
         <data>
          <supplied slot="0"/>
         </data>
        </cvUntyped>
       </check>
      </treat>
     </param>
     <let line="109" var="label" as="element(Q{http://www.w3.org/2005/xpath-functions}map)?" slot="1" eval="7">
      <check card="?" diag="3|0|XTTE0570|label">
       <filter flags="b">
        <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
        <gc op="=" card="1:1" comp="CCC">
         <attVal name="Q{}key" chk="0"/>
         <str val=".label"/>
        </gc>
       </filter>
      </check>
      <sequence line="110">
       <applyT flags="c" bSlot="-1">
        <varRef role="select" name="label" slot="1"/>
       </applyT>
       <choose line="111">
        <varRef name="retain-layout" slot="0"/>
        <applyT line="112" flags="ct" bSlot="-1">
         <except role="select" op="except">
          <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
          <varRef name="label" slot="1"/>
         </except>
        </applyT>
       </choose>
      </sequence>
     </let>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="1.0" seq="2" rank="2" minImp="0" slots="1" flags="s" line="82" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.withPredicate>
      <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
      <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="82" name="empty">
       <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
      </fn>
     </p.withPredicate>
     <filter defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="82" flags="b">
      <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
      <gc op="=" card="1:1" comp="CCC">
       <attVal name="Q{}key" chk="0"/>
       <str val="type"/>
      </gc>
     </filter>
    </p.withPredicate>
    <let role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="83" var="normalized" as="xs:string" slot="0" eval="7">
     <ufCall name="Q{bogo:my}normalize-map-key" tailCall="false" bSlot="1" eval="7">
      <check card="1" diag="0|0||my:normalize-map-key">
       <cvUntyped to="xs:string">
        <data>
         <filter flags="b">
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}key" chk="0"/>
           <str val="type"/>
          </gc>
         </filter>
        </data>
       </cvUntyped>
      </check>
     </ufCall>
     <compElem line="84">
      <varRef role="name" name="normalized" slot="0"/>
      <sequence role="content" line="85">
       <choose>
        <fn name="not">
         <gc op="=" card="N:1" comp="CCC">
          <data>
           <filter flags="b">
            <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
            <gc op="=" card="1:1" comp="CCC">
             <attVal name="Q{}key" chk="0"/>
             <str val="type"/>
            </gc>
           </filter>
          </data>
          <varRef name="normalized" slot="0"/>
         </gc>
        </fn>
        <att line="86" name="was" flags="l">
         <fn name="string-join">
          <convert from="xs:untypedAtomic" to="xs:string">
           <data>
            <filter flags="b">
             <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
             <gc op="=" card="1:1" comp="CCC">
              <attVal name="Q{}key" chk="0"/>
              <str val="type"/>
             </gc>
            </filter>
           </data>
          </convert>
          <str val=" "/>
         </fn>
        </att>
       </choose>
       <applyT line="88" flags="c" bSlot="-1">
        <except role="select" op="except">
         <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
         <filter flags="b">
          <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}string)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='string';"/>
          <gc op="=" card="1:1" comp="CCC">
           <attVal name="Q{}key" chk="0"/>
           <str val="type"/>
          </gc>
         </filter>
        </except>
       </applyT>
      </sequence>
     </compElem>
    </let>
   </templateRule>
   <templateRule prec="0" prio="0.5" seq="10" rank="1" minImp="0" slots="0" flags="s" line="153" module="xproceditor-noninteractive.xsl">
    <p.withPredicate role="match">
     <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='map';"/>
     <fn defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="153" name="empty">
      <axis name="attribute" nodeTest="attribute(Q{}key)" jsTest="return item.name==='key'"/>
     </fn>
    </p.withPredicate>
    <elem role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="155" name="anonymous-map" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="c p">
     <applyT flags="ci" bSlot="-1">
      <axis role="select" name="child" nodeTest="node()" jsTest="return true;"/>
     </applyT>
    </elem>
   </templateRule>
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="65" module="xproceditor-noninteractive.xsl">
    <p.nodeTest role="match" test="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
    <copy role="action" defaultElementNS="http://www.w3.org/1999/xhtml" ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="67" flags="cin">
     <applyT role="content" flags="c" bSlot="-1">
      <sequence role="select">
       <axis name="attribute" nodeTest="attribute()" jsTest="return SaxonJS.U.isAttr(item)"/>
       <axis name="child" nodeTest="( element() | text() | comment() | processing-instruction() )" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===1 || item.nodeType===3 || item.nodeType===7 || item.nodeType===8);"/>
      </sequence>
     </applyT>
    </copy>
   </templateRule>
  </mode>
 </co>
 <co id="21" binds="">
  <globalVariable name="Q{}xproc-version" type="xs:string" line="18" module="xproceditor-noninteractive.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n==1;};">
   <str val="1.0"/>
  </globalVariable>
 </co>
 <co id="14" binds="">
  <function name="Q{bogo:my}portData-for-linkEnd" line="406" module="xproceditor-noninteractive.xsl" eval="7" flags="pU" as="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)?" slots="3">
   <arg name="source-or-target" as="element()"/>
   <let role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="411" var="vv:v1" as="xs:untypedAtomic*" slot="1" eval="4">
    <data>
     <slash simple="1">
      <varRef name="source-or-target" slot="0"/>
      <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}port)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='port';"/>
     </slash>
    </data>
    <let line="410" var="vv:v0" as="xs:untypedAtomic*" slot="2" eval="4">
     <data>
      <slash>
       <slash simple="1">
        <varRef name="source-or-target" slot="0"/>
        <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
       </slash>
       <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
      </slash>
     </data>
     <check line="411" card="?" diag="5|0|XTTE0780|my:portData-for-linkEnd">
      <filter line="410" flags="b">
       <slash>
        <slash simple="1">
         <treat as="element()" jsTest="return item.nodeType===1;" diag="3|0|XTTE0570|step">
          <check card="?" diag="3|0|XTTE0570|step">
           <filter flags="b">
            <fn name="key">
             <str val="step-by-id"/>
             <data>
              <slash simple="1">
               <varRef name="source-or-target" slot="0"/>
               <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
              </slash>
             </data>
             <fn name="root">
              <varRef name="source-or-target" slot="0"/>
             </fn>
            </fn>
            <gc op="=" card="N:1" comp="CCC">
             <varRef name="vv:v0" slot="2"/>
             <data>
              <first>
               <sequence>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
                <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
               </sequence>
              </first>
             </data>
            </gc>
           </filter>
          </check>
         </treat>
         <axis line="411" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portData)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portData';"/>
        </slash>
        <axis line="411" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}anonymous-map)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='anonymous-map';"/>
       </slash>
       <gc line="411" op="=" card="M:N" comp="CCC">
        <data>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}portId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='portId';"/>
        </data>
        <varRef name="vv:v1" slot="1"/>
       </gc>
      </filter>
     </check>
    </let>
   </let>
  </function>
 </co>
 <co id="15" binds="15">
  <function name="Q{bogo:my}plan-distance" line="352" module="xproceditor-noninteractive.xsl" eval="3" flags="pU" as="element(Q{http://www.w3.org/2005/xpath-functions}sort-before)*" slots="3">
   <arg name="plan-item" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
   <arg name="distance" as="xs:integer"/>
   <let role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="356" var="connected-to" as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" slot="2" eval="7">
    <treat as="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';" diag="3|0|XTTE0570|connected-to">
     <check card="1" diag="3|0|XTTE0570|connected-to">
      <fn name="key">
       <str val="plan-by-id"/>
       <data>
        <slash>
         <filter flags="b">
          <slash simple="1">
           <varRef name="plan-item" slot="0"/>
           <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
          </slash>
          <fn name="exists">
           <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
          </fn>
         </filter>
         <axis name="attribute" nodeTest="attribute(Q{}target)" jsTest="return item.name==='target'"/>
        </slash>
       </data>
       <fn name="root">
        <varRef name="plan-item" slot="0"/>
       </fn>
      </fn>
     </check>
    </treat>
    <sequence ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="357">
     <elem name="sort-before" nsuri="http://www.w3.org/2005/xpath-functions" flags="d" namespaces="c p">
      <sequence>
       <att name="target" flags="l">
        <convert from="xs:untypedAtomic" to="xs:string">
         <data>
          <slash simple="1">
           <varRef name="connected-to" slot="2"/>
           <axis name="attribute" nodeTest="attribute(Q{}id)" jsTest="return item.name==='id'"/>
          </slash>
         </data>
        </convert>
       </att>
       <att name="distance" flags="l">
        <convert from="xs:integer" to="xs:string">
         <varRef name="distance" slot="1"/>
        </convert>
       </att>
       <att line="358" name="pos" flags="l">
        <convert from="xs:integer" to="xs:string">
         <check ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="373" card="1" diag="5|0|XTTE0780|my:index-of">
          <fn name="index-of">
           <slash>
            <slash ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="358">
             <slash simple="1">
              <varRef name="plan-item" slot="0"/>
              <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
             </slash>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
            <fn name="generate-id">
             <dot type="element()"/>
            </fn>
           </slash>
           <slash>
            <varRef ns="=http://www.w3.org/2005/xpath-functions xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="358" name="connected-to" slot="2"/>
            <fn name="generate-id">
             <dot type="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)"/>
            </fn>
           </slash>
          </fn>
         </check>
        </convert>
       </att>
       <choose line="359">
        <fn name="exists">
         <slash simple="1">
          <varRef name="connected-to" slot="2"/>
          <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
         </slash>
        </fn>
        <att line="360" name="pos" flags="l">
         <convert from="xs:integer" to="xs:string">
          <arith op="+" calc="i+i">
           <fn name="count">
            <slash>
             <slash simple="1">
              <varRef name="plan-item" slot="0"/>
              <axis name="parent" nodeTest="(element()|document-node())" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11||item.nodeType===1);"/>
             </slash>
             <axis name="child" nodeTest="element()" jsTest="return item.nodeType===1;"/>
            </slash>
           </fn>
           <int val="1"/>
          </arith>
         </convert>
        </att>
       </choose>
      </sequence>
     </elem>
     <choose ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="363">
      <fn name="exists">
       <filter flags="b">
        <slash simple="1">
         <filter flags="b">
          <varRef name="connected-to" slot="2"/>
          <fn name="empty">
           <axis name="attribute" nodeTest="attribute(Q{}container)" jsTest="return item.name==='container'"/>
          </fn>
         </filter>
         <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}connection)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='connection';"/>
        </slash>
        <fn name="exists">
         <axis name="attribute" nodeTest="attribute(Q{}primary)" jsTest="return item.name==='primary'"/>
        </fn>
       </filter>
      </fn>
      <ufCall line="364" name="Q{bogo:my}plan-distance" tailCall="false" bSlot="0" eval="6 7">
       <varRef name="connected-to" slot="2"/>
       <arith op="+" calc="i+i">
        <varRef name="distance" slot="1"/>
        <int val="1"/>
       </arith>
      </ufCall>
     </choose>
    </sequence>
   </let>
  </function>
 </co>
 <co id="20" binds="3">
  <template name="Q{}create-xpl" flags="os" line="40" module="xproceditor.xsl" slots="0">
   <callT role="body" defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc fn=~ ixsl=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="41" name="create-xpl-noninteractive" bSlot="0" flags="t">
    <withParam name="Q{}graph-as-json" flags="c" as="xs:string">
     <treat line="43" as="xs:string" jsTest="return SaxonJS.U.Atomic.string.matches(item);" diag="8|0|XTTE0590|graph-as-json">
      <check card="1" diag="8|0|XTTE0590|graph-as-json">
       <cvUntyped to="xs:string">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}eval" type="item()*">
          <str val="JSON.stringify(allPipelines())"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </withParam>
    <withParam name="Q{}retain-layout" flags="t" as="xs:boolean">
     <treat line="45" as="xs:boolean" jsTest="return SaxonJS.U.Atomic.boolean.matches(item);" diag="8|0|XTTE0590|retain-layout">
      <check card="1" diag="8|0|XTTE0590|retain-layout">
       <cvUntyped to="xs:boolean">
        <data>
         <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}get" type="item()*">
          <check card="?" diag="0|0||ixsl:get">
           <fn name="id">
            <str val="layout-checkbox"/>
            <check card="1" diag="0|1||fn:id">
             <ifCall name="Q{http://saxonica.com/ns/interactiveXSLT}page" type="document-node()?"/>
            </check>
           </fn>
          </check>
          <str val="checked"/>
         </ifCall>
        </data>
       </cvUntyped>
      </check>
     </treat>
    </withParam>
   </callT>
  </template>
 </co>
 <co id="7" vis="PUBLIC" binds="">
  <globalParam name="Q{}debug" type="xs:string?" line="16" module="xproceditor-noninteractive.xsl" visibility="PUBLIC" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&lt;=1;};">
   <str val="true"/>
  </globalParam>
 </co>
 <co id="22" binds="">
  <globalVariable name="Q{}subpipeline-element-names" type="xs:string+" line="184" module="xproceditor-noninteractive.xsl" visibility="PRIVATE" jsAcceptor="return SaxonJS.U.Atomic.string.cast(val);" jsCardCheck="function c(n) {return n&gt;=1;};">
   <literal count="3">
    <str val="xproc.Atomic"/>
    <str val="xproc.Compound"/>
    <str val="xproc.Variable"/>
   </literal>
  </globalVariable>
 </co>
 <co id="23" binds="">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="1" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="17" module="xproceditor.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    <empty role="action"/>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{}plan-by-id" line="368" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}plan-item)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='plan-item';"/>
  <attVal defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="368" name="Q{}id" chk="0"/>
 </key>
 <key name="Q{}step-by-id" line="173" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.withPredicate>
   <p.nodeTest test="element()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1;"/>
   <axis defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="173" name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
  </p.withPredicate>
  <data defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="173">
   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}stepId)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='stepId';"/>
  </data>
 </key>
 <key name="Q{}connect" line="171" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';"/>
  <data defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="171">
   <slash>
    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}source)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='source';"/>
    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
   </slash>
  </data>
 </key>
 <key name="Q{}connect-target" line="172" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}devs.StandLink)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='devs.StandLink';"/>
  <data defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="172">
   <slash>
    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}target)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='target';"/>
    <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}id)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='id';"/>
   </slash>
  </data>
 </key>
 <key name="Q{}options" line="170" module="xproceditor-noninteractive.xsl" binds="" flags="u">
  <p.nodeTest test="element(Q{http://www.w3.org/2005/xpath-functions}xproc.Option)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='xproc.Option';"/>
  <data defaultElementNS="http://www.w3.org/1999/xhtml" ns="xsl=~ output=http://www.w3.org/2010/xslt-xquery-serialization p=http://www.w3.org/ns/xproc c=http://www.w3.org/ns/xproc-step fn=~ xs=~ math=http://www.w3.org/2005/xpath-functions/math my=bogo:my" line="170">
   <axis name="child" nodeTest="element(Q{http://www.w3.org/2005/xpath-functions}parent)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='http://www.w3.org/2005/xpath-functions'&amp;&amp;q.local==='parent';"/>
  </data>
 </key>
 <output>
  <property name="indent" value="yes"/>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="30"/>
  <property name="method" value="xml"/>
 </output>
 <decimalFormat/>
</package>
<?Σ c5441d8e?>
